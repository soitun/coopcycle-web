# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
#    parameter_name: value

services:
#    service_name:
#        class: AppBundle\Directory\ClassName
#        arguments: ["@another_service_name", "plain_value", "%parameter_name%"]

  app.locale_listener:
    class: AppBundle\EventListener\LocaleListener
    arguments: ['%kernel.default_locale%']
    tags:
      - { name: kernel.event_subscriber }

  app.form.api_registration:
    class: AppBundle\Form\ApiRegistrationType
    arguments: ['%country_iso%']
    tags:
      - { name: form.type, alias: app_user_api_registration }

  app.form.registration:
    class: AppBundle\Form\RegistrationType
    arguments: ['%country_iso%']
    tags:
      - { name: form.type, alias: app_user_registration }

  app.form.update_profile:
    class: AppBundle\Form\UpdateProfileType
    arguments: [ '@security.token_storage', '@translator', '%country_iso%' ]
    tags:
      - { name: form.type, alias: app_update_profile }

  app.form.delivery:
    class: AppBundle\Form\DeliveryType
    arguments: [ '@security.token_storage' ]
    tags:
      - { name: form.type, alias: app_delivery }

  app.form.restaurant:
    class: AppBundle\Form\RestaurantType
    arguments: [ '@security.token_storage' ]
    tags:
      - { name: form.type, alias: app_restaurant }

  app.form.store:
    class: AppBundle\Form\StoreType
    arguments: [ '@security.token_storage' ]
    tags:
      - { name: form.type, alias: app_store }

  coopcycle.repository.zone:
    class: AppBundle\Entity\OrderRepository
    factory: ['@doctrine.orm.default_entity_manager', getRepository]
    arguments:
      - AppBundle\Entity\Zone

  coopcycle.expression_language.zone.provider:
    public: true
    class: AppBundle\ExpressionLanguage\ZoneExpressionLanguageProvider
    arguments: [ '@coopcycle.repository.zone' ]

  my.registration_listener:
    class: AppBundle\EventListener\RegistrationListener
    arguments: ['@router']
    tags:
      - { name: kernel.event_subscriber }

  'AppBundle\EventListener\SyliusIdGeneratorSubscriber':
    tags:
      - { name: doctrine.event_subscriber, connection: default }

  order.entity_listener:
    class: AppBundle\Entity\Listener\OrderListener
    # lazy = true is mandatory
    # https://symfony.com/doc/3.3/doctrine/event_listeners_subscribers.html#lazy-loading-for-event-listeners
    # https://github.com/doctrine/DoctrineBundle/issues/300
    arguments:
      - "@security.token_storage"
      - "@snc_redis.default"
      - "@serializer"
      - "@order.manager"
      - "@event_dispatcher"
    tags:
      - { name: doctrine.orm.entity_listener, lazy: true }

  coopcycle.tax_calculator.float:
    class: AppBundle\Service\Taxation\FloatCalculator
    tags:
      - { name: sylius.tax_calculator, calculator: float, label: "Float" }

  order.manager:
    public: true
    class: AppBundle\Service\OrderManager
    arguments:
      - "@payment_service"
      - "@snc_redis.default"
      - "@serializer"
      - "@sylius.tax_rate_resolver"
      - "@sylius.tax_calculator"
      - "@sylius.repository.tax_category"
      - "@coopcycle.delivery.manager"
      - "@event_dispatcher"

  coopcycle.delivery.manager:
    class: AppBundle\Service\DeliveryManager
    arguments:
      - "@coopcycle.repository.delivery.pricing_rule"
      - "@sylius.tax_rate_resolver"
      - "@sylius.tax_calculator"
      - "@sylius.repository.tax_category"
      - 'tva_livraison' # TODO Load from settings
      - "@coopcycle.expression_language.zone.provider"

  coopcycle.cart_provider:
    class: AppBundle\Service\CartProviderService
    arguments:
      - "@doctrine"
      - "@request_stack"

  delivery.entity_listener:
    class: AppBundle\Entity\Listener\DeliveryListener
    arguments: [ "@snc_redis.default", "@serializer" ]
    tags:
      - { name: doctrine.orm.entity_listener }

  order_item.entity_listener:
    class: AppBundle\Entity\Listener\OrderItemListener
    tags:
      - { name: doctrine.orm.entity_listener }

  task.entity_listener:
    class: AppBundle\Entity\Listener\TaskListener
    arguments: [ "@event_dispatcher", "@logger" ]
    tags:
      - { name: doctrine.orm.entity_listener }

  my.order_normalizer:
    class: AppBundle\Serializer\OrderNormalizer
    arguments: [ "@api_platform.jsonld.normalizer.item", "@router" ]
    tags: [ { name: serializer.normalizer, priority: 128 } ]

  my.delivery_normalizer:
    class: AppBundle\Serializer\DeliveryNormalizer
    arguments: [ "@api_platform.jsonld.normalizer.item" ]
    tags: [ { name: serializer.normalizer, priority: 128 } ]

  app.menu_normalizer:
    class: AppBundle\Serializer\MenuNormalizer
    arguments:
      - "@api_platform.jsonld.normalizer.item"
    tags: [ { name: serializer.normalizer, priority: 128 } ]

  app.restaurant_normalizer:
    class: AppBundle\Serializer\RestaurantNormalizer
    arguments:
      - "@api_platform.jsonld.normalizer.item"
    tags: [ { name: serializer.normalizer, priority: 128 } ]

  coopcycle.api.normalizer.task:
    class: AppBundle\Serializer\TaskNormalizer
    arguments:
      - "@api_platform.jsonld.normalizer.item"
      - "@api_platform.iri_converter"
    tags: [ { name: serializer.normalizer, priority: 128 } ]

  app.menu_section:
    class: AppBundle\Serializer\MenuSectionNormalizer
    arguments:
      - "@api_platform.jsonld.normalizer.item"
    tags: [ { name: serializer.normalizer, priority: 128 } ]

  app.menu_item_normalizer:
    class: AppBundle\Serializer\MenuItemNormalizer
    arguments:
      - "@api_platform.jsonld.normalizer.item"
    tags: [ { name: serializer.normalizer, priority: 128 } ]

  'AppBundle\Form\MenuType\MenuItemModifierType':
    arguments: [ '@translator' ]
    tags: [ form.type ]

  'AppBundle\Form\TaskUploadType':
    arguments: [ '@craue_config', '@csa_guzzle.client.google_maps', '@translator' ]
    tags: [ form.type ]

  'AppBundle\Form\TaskExportType':
    arguments: [ '@coopcycle.repository.task' ]
    tags: [ form.type ]

  my.jwt_listener:
    class: AppBundle\EventListener\JwtListener
    tags:
      - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccess }

  my.order_repository:
    class: AppBundle\Entity\OrderRepository
    factory: ['@doctrine.orm.default_entity_manager', getRepository]
    arguments:
      - AppBundle\Entity\Order

  my.delivery_repository:
    class: AppBundle\Entity\DeliveryRepository
    factory: ['@doctrine.orm.default_entity_manager', getRepository]
    arguments:
      - AppBundle\Entity\Delivery

  coopcycle.repository.delivery.pricing_rule:
    class: Doctrine\ORM\EntityRepository
    factory: ['@doctrine.orm.default_entity_manager', getRepository]
    arguments:
      - AppBundle\Entity\Delivery\PricingRule

  coopcycle.repository.task:
    class: Doctrine\ORM\EntityRepository
    factory: ['@doctrine.orm.default_entity_manager', getRepository]
    arguments:
      - AppBundle\Entity\Task

  routing_service:
    public: true
    class: AppBundle\Service\Routing\Osrm
    arguments:
      - '@csa_guzzle.client.osrm'

  payment_service:
    class: AppBundle\Service\PaymentService
    arguments:
      - "%stripe_secret_key%"
      - "@logger"

  'AppBundle\Filter\RestaurantFilter':
    arguments: [ '@doctrine', '@request_stack', '@logger', { distance: "exact", coordinate: "exact" } ]
    tags: [ 'api_platform.filter' ]

  twig.extension.text:
    class: Twig_Extensions_Extension_Text
    tags:
      - { name: twig.extension }

  twig.extension.intl:
    class: Twig_Extensions_Extension_Intl
    tags:
      - { name: twig.extension }

  swiftmailer.transport.eventdispatcher.mailjet:
    class: Swift_Events_SimpleEventDispatcher

  swiftmailer.mailer.transport.mailjet:
      class: AppBundle\Service\MailjetTransport
      arguments:
          - "@swiftmailer.transport.eventdispatcher.mailjet"
          - "%mailjet.api_key%"
          - "%mailjet.secret_key%"
          - "@logger"

  swiftmailer.logger:
      class: AppBundle\Service\MailLoggerService
      arguments: ["@logger"]
      tags:
        - { name: monolog.logger, channel: mailer }
        - { name: "swiftmailer.default.plugin" }

  coopcycle.metrics_helper:
    class: AppBundle\Utils\MetricsHelper
    arguments:
      - "%database_name%"
      - "@m6_statsd"

  coopcycle.web_success_handler:
    class: AppBundle\EventListener\AuthenticationWebSuccessHandler
    arguments: ['@router']

  coopcycle.task_manager:
    class: AppBundle\Service\TaskManager
    arguments: ["@doctrine", "@event_dispatcher"]

  coopcycle.notification_manager:
    class: AppBundle\Service\NotificationManager
    arguments:
      - "@mailer"
      - "@templating"
      - "@translator"
      - { transactional_address: "%transactional_address%", transactional_sender_name: "%transactional_sender_name%" }

  'AppBundle\Validator\Constraints\CartValidator':
    arguments: [ '@routing_service' ]
    tags:
      - { name: validator.constraint_validator }

  'AppBundle\Validator\Constraints\DeliveryValidator':
    arguments: [ '@routing_service' ]
    tags:
      - { name: validator.constraint_validator }

  # Order of Doctrine Subscribers is important !
  # - DeliverySubscriber
  # - TaskCollectionSubscriber

  'AppBundle\EventListener\DeliverySubscriber':
    tags:
      - { name: doctrine.event_subscriber, connection: default, priority: 256 }

  'AppBundle\EventListener\TaskCollectionSubscriber':
    arguments: [ '@event_dispatcher', '@routing_service', '@logger' ]
    tags:
      - { name: doctrine.event_subscriber, connection: default, priority: 128 }
